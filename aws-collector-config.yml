---
# https://opentelemetry.io/docs/collector/configuration/
# https://docs.datadoghq.com/tracing/setup_overview/open_standards/

# https://github.com/aws-observability/aws-otel-collector/blob/main/config.yaml
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/datadogexporter
# https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/datadogexporter/example/config.yaml

receivers:
  otlp:
    protocols:
      grpc:
        # endpoint: 0.0.0.0:4317
      http:
        # endpoint: 0.0.0.0:4318
        # endpoint: 0.0.0.0:55681
  awsxray:
    endpoint: 0.0.0.0:2000
    transport: udp

processors:
  batch/traces:
    timeout: 10s
    send_batch_size: 50
  batch/metrics:
    timeout: 60s
  resourcedetection:
    detectors: [gce, ecs, ec2, azure, system]

exporters:
  # awsxray:
  # awsemf:
  datadog/api:
    # hostname: atp # DD_HOSTNAME
    # env: prod # DD_ENV
    # service: atp # DD_SERVICE
    # version: "0.1" # DD_VERSION
    # DD_TAGS=environment:development
    # tags:
    #   - example:tag
    # site: datadoghq.com # DD_SITE
    api:
      key: "${DD_API_KEY}"
      # traces:
      #   span_name_as_resource_name: true

extensions:
  health_check:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch/traces, resourcedetection]
      exporters: [datadog/api]
    # metrics:
    #   receivers: [otlp]
    #   processors: [batch/metrics]
    #   exporters: [awsemf]
  extensions: [health_check]
